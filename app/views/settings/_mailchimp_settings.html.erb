<% begin -%>
<table>
  <tbody>
    <tr>
      <th>Mailchimp API Key</th>
      <td><input type="text" id="api_key" 
                 value="<%= settings['api_key'] %>" 
                 name="settings[api_key]" >
        <% if !Setting.plugin_redmine_mailchimp[:api_key].nil? -%>
          <% if !Setting.plugin_redmine_mailchimp[:api_key].empty? -%>
            <% settings['mailchimp'] = Mailchimp::API.new(Setting.plugin_redmine_mailchimp[:api_key]) -%>
            <% mailchimp = Setting.plugin_redmine_mailchimp[:mailchimp] -%>
          <% end -%>
        <% end -%>
      </td>
    </tr>

  <% if !mailchimp.nil? -%>
    <tr>
      <th>Mailchimp List</th>
      <td>
            <% lists = mailchimp.lists.list -%>
            <% list_names = [""] + lists["data"].map { |h| h.slice("name") }.collect {|x| x["name"]} -%>
            <% list_ids = [""] + lists["data"].map { |h| h.slice("id") }.collect {|x| x["id"]} -%>

            <%= select_tag('settings[list_name]',
              options_for_select(list_names,
                Setting.plugin_redmine_mailchimp["list_name"]),
                :onchange => settings['list_name']) %>
            <% if !Setting.plugin_redmine_mailchimp[:list_name].nil? -%>
              <% index = list_names.find_index(Setting.plugin_redmine_mailchimp["list_name"]) -%>
              <% settings['list_id'] = list_ids[index] %>
              <% list_id = Setting.plugin_redmine_mailchimp[:list_id] -%>
            <% end -%>

      </td>
    </tr>
  <% end -%>


    <tr>

      <th>Double Opt-in</th>
      <td>
          <%= check_box_tag "settings[double_optin]", true,
          !!Setting.plugin_redmine_mailchimp["double_optin"] %>
      </td>
    </tr>
    <tr>
      <th>Update Existing</th>
      <td>
          <%= check_box_tag "settings[update_existing]", true,
          !!Setting.plugin_redmine_mailchimp["update_existing"] %>
      </td>
    </tr>
    <tr>
      <th>Replace Interests</th>
      <td>
          <%= check_box_tag "settings[replace_interests]", true,
          !!Setting.plugin_redmine_mailchimp["replace_interests"] %>
      </td>
    </tr>
    <tr>
      <th>Send Welcome Email</th>
      <td>
          <%= check_box_tag "settings[send_welcome]", true,
          !!Setting.plugin_redmine_mailchimp["send_welcome"] %>
      </td>
    </tr>

  </tbody>
</table>

<% standard_user_fields = [] -%>
<% user_fields = [] -%>
<% merge_fields = [] -%>

<% if !Setting.plugin_redmine_mailchimp[:api_key].nil? && !Setting.plugin_redmine_mailchimp[:list_name].nil?-%>
  <% if !Setting.plugin_redmine_mailchimp[:api_key].empty? && !Setting.plugin_redmine_mailchimp[:list_name].empty? -%>

    <% user_fields = [""] + CustomField.where(type: "UserCustomField").map(&:name).uniq.sort -%>
    <% merge_vars = mailchimp.lists.merge_vars([list_id]) -%>
    <% merge_fields = [""] + merge_vars["data"].first["merge_vars"].map { |h| h.slice("tag") }.collect {|x| x["tag"]} -%>
    <% merge_fields.delete("EMAIL") -%>
    <% merge_fields.delete("FNAME") -%>
    <% merge_fields.delete("LNAME") -%>
    <% settings['merge_fields_count'] = merge_fields.count - 1 -%>
  <% end -%>
<% end -%>

<table cellspacing=5 width=300>
  <tr>
    <td align="center">
      <strong>Mailchimp<br>Merge Field</strong>
    </td>
    <td align="center">
      <strong>Redmine<br>User Field</strong>
    </td>
  </tr>

<% i = 0 -%>
<% while i < (merge_fields.count - 1) -%>
  <% setting_merge_field = 'settings[merge_field_' + i.to_s + ']' -%>
  <% setting_user_field = 'settings[user_field_' + i.to_s + ']' -%>
  <tr>
    <td align="center">
      <%= select_tag(setting_merge_field,
        options_for_select(merge_fields,
          Setting.plugin_redmine_mailchimp["merge_field_" + i.to_s]),
          :onchange => settings['merge_field_' + i.to_s]) %>
    </td>
    <td align="center">
      <%= select_tag(setting_user_field,
        options_for_select(user_fields,
          Setting.plugin_redmine_mailchimp["user_field_" + i.to_s]),
          :onchange => settings['user_field_' + i.to_s]) %>
    </td>
  </tr>
  
  <% i += 1 -%>
<% end -%>

</table>
<% rescue Exception => e -%>
  <% flash[:error] = e.message -%>
<% end -%>